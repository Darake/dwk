name: Release application

on:
  push:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-north1-b
  SERVER_IMAGE: project-server
  CLIENT_IMAGE: project-client

jobs:
  build-publish-deploy:
    name: Build, Publish and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.GKE_PROJECT }}
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        export_default_credentials: true
    - run: gcloud --quiet auth configure-docker
    - run: gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
    # - name: Build & publish server
    #   uses: whoan/docker-build-with-cache-action@v5
    #   with:
    #     username: _json_key
    #     password: "${{ secrets.GCLOUD_JSON_KEY }}"
    #     image_name: "gcr.io/$PROJECT_ID/$SERVER_IMAGE"
    #     image_tag: "${GITHUB_REF#refs/heads/}-$GITHUB_SHA"
    #     registry: gcr.io
    #     context: project/server/
    - name: Build server
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$SERVER_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" \
          project/server/
    - name: Build client
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$CLIENT_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" \
          project/client/
    - name: Publish server
      run: |-
        docker push "gcr.io/$PROJECT_ID/$SERVER_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA"
    - name: Publish client
      run: |-
        docker push "gcr.io/$PROJECT_ID/$CLIENT_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA"
    - name: Set up Kustomize
      uses: imranismail/setup-kustomize@v1
    - name: Deploy
      run: |-
        kubectl create namespace ${GITHUB_REF#refs/heads/} || true
        kubectl config set-context --current --namespace=${GITHUB_REF#refs/heads/}
        kubectl get secret project-secrets -n dwk-project -o json \
        | jq 'del(.metadata["namespace","creationTimestamp","resourceVersion","selfLink","uid"])' \
        | kubectl apply -f -
        (cd project && \
        kustomize edit set namespace ${GITHUB_REF#refs/heads/} && \
        kustomize edit set image gcr.io/PROJECT_ID/CLIENT_IMAGE=gcr.io/$PROJECT_ID/$CLIENT_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA && \
        kustomize edit set image gcr.io/PROJECT_ID/SERVER_IMAGE=gcr.io/$PROJECT_ID/$SERVER_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA)
        kustomize build project/ | kubectl apply -f -
        kubectl get services -o wide