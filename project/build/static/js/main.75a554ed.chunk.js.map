{"version":3,"sources":["Components/DailyImage.js","Components/Todos/index.js","App.js","reportWebVitals.js","index.js"],"names":["DailyImage","fetchImage","a","axios","get","responseType","data","URL","createObjectURL","useQuery","src","alt","width","Todos","App","queryClient","QueryClient","client","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAgBeA,EAbI,WACjB,IAAMC,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,IAAMC,IAAI,mBAAoB,CAAEC,aAAc,SADpD,uBACTC,EADS,EACTA,KADS,kBAEVC,IAAIC,gBAAgBF,IAFV,2CAAH,qDAKRA,EAASG,mBAAS,QAASR,GAA3BK,KAER,OACE,qBAAKI,IAAKJ,EAAMK,IAAI,QAAQC,MAAM,W,gBCKvBC,EAfD,WACZ,OACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,IACA,cAAC,IAAD,6BAEF,eAAC,IAAD,WACE,cAAC,IAAD,4BACA,cAAC,IAAD,4BCWOC,MAjBf,WACE,IAAMC,EAAc,IAAIC,cAExB,OACE,cAAC,sBAAD,CAAqBC,OAAQF,EAA7B,SACE,qBAAKG,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,cCFGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.75a554ed.chunk.js","sourcesContent":["import { useQuery } from 'react-query'\nimport axios from \"axios\"\n\nconst DailyImage = () => {\n  const fetchImage = async () => {\n    const { data } = await axios.get('/api/daily-image', { responseType: 'blob' })    \n    return URL.createObjectURL(data)\n  }\n\n  const { data } = useQuery(\"image\", fetchImage)\n\n  return (\n    <img src={data} alt=\"daily\" width=\"400px\" />\n  )\n}\n\nexport default DailyImage","import { Input, Flex, Button, VStack, UnorderedList, ListItem } from \"@chakra-ui/react\"\n\nconst Todos = () => {\n  return (\n    <VStack>\n      <Flex>\n        <Input />\n        <Button>Create Todo</Button>\n      </Flex>\n      <UnorderedList>\n        <ListItem>Learn to kube</ListItem>\n        <ListItem>Profit</ListItem>\n      </UnorderedList>\n    </VStack>\n  )\n}\n\nexport default Todos\n","import { VStack } from '@chakra-ui/layout';\nimport { QueryClientProvider, QueryClient } from 'react-query'\nimport DailyImage from './Components/DailyImage';\nimport Todos from './Components/Todos';\n\nfunction App() {\n  const queryClient = new QueryClient()\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <VStack>\n            <DailyImage />\n            <Todos />\n          </VStack>\n        </header>\n      </div>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ChakraProvider } from \"@chakra-ui/react\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}